import{_ as e,o as t,c as o,Q as i}from"./chunks/framework.4719a631.js";const g=JSON.parse('{"title":"Executing the optimize mode","description":"","frontmatter":{},"headers":[],"relativePath":"docs/optimize/executing-the-optimize-mode.md","filePath":"docs/optimize/executing-the-optimize-mode.md"}'),a={name:"docs/optimize/executing-the-optimize-mode.md"},s=i('<h1 id="executing-the-optimize-mode" tabindex="-1">Executing the optimize mode <a class="header-anchor" href="#executing-the-optimize-mode" aria-label="Permalink to &quot;Executing the optimize mode&quot;">​</a></h1><p>Executing an optimization session is similar to how you execute a <a href="./../backtest">backtest</a>:</p><p><img src="https://jesse.trade/storage/images/docs/optimize-mode.jpg" alt="optimize-mode"></p><h2 id="important-considerations" tabindex="-1">Important considerations <a class="header-anchor" href="#important-considerations" aria-label="Permalink to &quot;Important considerations&quot;">​</a></h2><p>There are a few notes to be aware of when executing an optimization session:</p><ul><li>Routes are limited to only &quot;one trading route&quot;. You can define multiple extra routes, however.</li><li>To prevent overfitting, the duration of the period should not be too short. For example, don&#39;t optimize a strategy for a 3 days period and then expect it to crush it in all market conditions!</li><li>The optimize mode cannot run properly if the strategy&#39;s PNL is negative. Its purpose is to improve your PNL, not turn it from negative to positive.</li></ul><h2 id="optimal-trades" tabindex="-1">Optimal Trades <a class="header-anchor" href="#optimal-trades" aria-label="Permalink to &quot;Optimal Trades&quot;">​</a></h2><p>The <code>Optimal number of trades</code> input expects an integer that tells Jesse how many trades you would find optimal for your strategy in <strong>that time period</strong> so that it can filter out those DNAs that cause too few trades.</p><p>This is an incredibly important parameter for optimization which helps filter out impractical strategies.</p><p>For example, imagine that I have a trend-following strategy that I trade on the <code>6h</code> timeframe and I usually get 30-60 trades per year in my backtests. You could say that I&#39;ll be fine with DNAs that cause my strategy to execute the same number of trades (30-60). But will I be fine if it only made like 5 trades in a whole year but had a higher win-rate? The answer is no. Because such backtest results cannot be trusted in the long term. I want to have the law of big numbers in my favor to stay away from the dangers of over-fitting.</p><p>Thus, by setting my <code>Optimal number of trades</code> to a number like <code>60</code> I will successfully filter out such impractical DNAs.</p><p>The fitness score (which is used to rank DNAs) is then determined by the closeness of a DNA&#39;s total to the <code>Optimal number of trades</code> combined with the Sharpe ratio of the DNA.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When in doubt about the correct value for the <code>Optimal number of trades</code>, try setting it higher than what you have in mind, but not lower.</p><p>For example, in my example, the average number of trades per year is 30-60, so I would set <code>Optimal number of trades</code> to <code>60</code>. I could set it to <code>100</code> and it would still work just fine, but if I had set it to like 10, it might have broken some calculations of the optimize mode.</p></div><h2 id="optimization-settings" tabindex="-1">Optimization settings <a class="header-anchor" href="#optimization-settings" aria-label="Permalink to &quot;Optimization settings&quot;">​</a></h2><p>There&#39;s a section in the settings page in the dashboard which allows you to change the settings for the optimization mode:</p><p><img src="https://jesse.trade/storage/images/docs/settings-optimize-mode.jpg" alt="settings-optimize-mode"></p><h2 id="when-is-the-optimization-over" tabindex="-1">When is the optimization over? <a class="header-anchor" href="#when-is-the-optimization-over" aria-label="Permalink to &quot;When is the optimization over?&quot;">​</a></h2><p>After starting the optimize mode, first, the initial population is generated. There is a progress bar telling you how long you have to wait until it&#39;s done. During this period, no optimization is being done. It&#39;s just a random generation of the DNA.</p><p>Then, the <strong>&quot;evolving&quot;</strong> phase begins and the progressbar is back to zero. You will see a progress bar for this phase too, but you don&#39;t need to pay much attention to it <strong>or expect it to reach 100%</strong>.</p><p>Remember that the point of the optimize mode is not to find the perfect parameters, but it is to find a few good ones. Why? Because the perfect ones also have a higher chance of being <a href="/docs/optimize/overfitting.html">over-fit</a>.</p><p>All you need as the result of running the optimize mode is the <strong>DNA string</strong>. And you can see them at any time in the monitoring dashboard. Hence, once you see a few DNAs that are resulting good in both training and testing set, then copy those DNAs, <a href="/docs/optimize/dna-usage.html">and use them</a> to run separate backtests on your validation period. If that performed well, then you&#39;re good to go.</p>',21),n=[s];function r(h,d,p,m,c,l){return t(),o("div",null,n)}const f=e(a,[["render",r]]);export{g as __pageData,f as default};
