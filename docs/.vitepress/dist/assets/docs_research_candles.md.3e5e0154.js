import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.4719a631.js";const g=JSON.parse('{"title":"Candles","description":"","frontmatter":{},"headers":[],"relativePath":"docs/research/candles.md","filePath":"docs/research/candles.md"}'),l={name:"docs/research/candles.md"},p=e(`<h1 id="candles" tabindex="-1">Candles <a class="header-anchor" href="#candles" aria-label="Permalink to &quot;Candles&quot;">​</a></h1><p>We provide a few handful functions that allow you to:</p><ul><li>Create (even fake) candles</li><li>Store candles in the database</li><li>Fetch candles from the database</li><li>Plot candles</li></ul><p>They can be quite useful for doing research in <a href="./jupyter">Jupyter notebooks</a> or when writing your own custom scripts.</p><h2 id="import-candles" tabindex="-1">import_candles <a class="header-anchor" href="#import-candles" aria-label="Permalink to &quot;import_candles&quot;">​</a></h2><p>The equivalent to the <a href="https://docs.jesse.trade/docs/import-candles.html#importing-candles" target="_blank" rel="noreferrer">import candles mode</a> in the GUI dashboard.</p><p>Useful for operations such as a script to batch-import candles for a list of symbols.</p><p>Returns the success message in the string format after a successful import. By default, a progress bar is shown which is helpful in environments such as Jupyter notebooks but it can be disabled by setting <code>show_progress_bar</code> to <code>False</code>.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">import_candles(exchange, symbol, start_date, </span><span style="color:#FFAB70;">show_progressbar</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">import_candles(exchange, symbol, start_date, </span><span style="color:#E36209;">show_progressbar</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>exchange: str</li><li>symbol: str</li><li>start_date: str</li><li>show_progressbar: bool (default: True)</li></ul><p><strong>Return Type</strong>: str</p><h2 id="store-candles" tabindex="-1">store_candles <a class="header-anchor" href="#store-candles" aria-label="Permalink to &quot;store_candles&quot;">​</a></h2><p>Stores candles in the database. The stored data can later be used for being fetched again via <a href="#get-candles">get_candles</a> or even for running backtests on them.</p><p>A common use case for this function is for importing candles from a CSV file so you can later use them for backtesting.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">store_candles(candles, exchange, symbol)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">store_candles(candles, exchange, symbol)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Jesse uses <code>1m</code> timeframe candles and generates others as needed on the fly. So the candles you pass to this function must be in the <code>1m</code> timeframe.</p></div><p><strong>Properties</strong>:</p><ul><li>candles: np.ndarray</li><li>exchange: str</li><li>symbol: str</li></ul><p><strong>Return Type</strong>: None</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">close_prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">np_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">research.store_candles(np_candles, </span><span style="color:#9ECBFF;">&#39;Test Exchange&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;BTC-USDT&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">close_prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">np_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">research.store_candles(np_candles, </span><span style="color:#032F62;">&#39;Test Exchange&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;BTC-USDT&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="get-candles" tabindex="-1">get_candles <a class="header-anchor" href="#get-candles" aria-label="Permalink to &quot;get_candles&quot;">​</a></h2><p>Fetches candles from the database and returns them as a numpy array with the same structure that Jesse&#39;s <a href="/docs/strategies/api.html#candles">self.candles</a> does.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">get_candles(exchange, symbol, timeframe, start_date, finish_date)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">get_candles(exchange, symbol, timeframe, start_date, finish_date)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>exchange: str</li><li>symbol: str</li><li>timeframe: str (supported: <code>1m</code>, <code>3m</code>, <code>5m</code>, <code>15m</code>, <code>30m</code>, <code>1h</code>, <code>2h</code>, <code>3h</code>, <code>4h</code>, <code>6h</code>, <code>1D</code>)</li><li>start_date: str</li><li>finish_date: str</li></ul><p><strong>Return Type</strong>: np.ndarray</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">eth_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.get_candles(</span><span style="color:#9ECBFF;">&#39;Binance&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ETH-USDT&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;4h&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2019-07-28&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2019-09-28&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(eth_candles[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#6A737D;"># array([</span></span>
<span class="line"><span style="color:#6A737D;">#     1.56427200e+12, # timestamp </span></span>
<span class="line"><span style="color:#6A737D;">#     2.07300000e+02, # open</span></span>
<span class="line"><span style="color:#6A737D;">#     2.07750000e+02, # close</span></span>
<span class="line"><span style="color:#6A737D;">#     2.08230000e+02, # high</span></span>
<span class="line"><span style="color:#6A737D;">#     2.06170000e+02, # low</span></span>
<span class="line"><span style="color:#6A737D;">#     2.15143531e+04 # volume</span></span>
<span class="line"><span style="color:#6A737D;"># ])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">eth_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.get_candles(</span><span style="color:#032F62;">&#39;Binance&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ETH-USDT&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;4h&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2019-07-28&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2019-09-28&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(eth_candles[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;"># array([</span></span>
<span class="line"><span style="color:#6A737D;">#     1.56427200e+12, # timestamp </span></span>
<span class="line"><span style="color:#6A737D;">#     2.07300000e+02, # open</span></span>
<span class="line"><span style="color:#6A737D;">#     2.07750000e+02, # close</span></span>
<span class="line"><span style="color:#6A737D;">#     2.08230000e+02, # high</span></span>
<span class="line"><span style="color:#6A737D;">#     2.06170000e+02, # low</span></span>
<span class="line"><span style="color:#6A737D;">#     2.15143531e+04 # volume</span></span>
<span class="line"><span style="color:#6A737D;"># ])</span></span></code></pre></div><h2 id="fake-candle" tabindex="-1">fake_candle <a class="header-anchor" href="#fake-candle" aria-label="Permalink to &quot;fake_candle&quot;">​</a></h2><p>Generates a fake candle. If attributes are passed, then it&#39;ll create using those values. Else, it will generate one.</p><p>If <code>reset</code> is passed as <code>True</code>, then all values including timestamp will be reset (and no longer will look like a price series)</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">candlestick_chart(attributes, reset)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">candlestick_chart(attributes, reset)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>attributes: dict</li><li>reset: bool = False</li></ul><p><strong>Return Type</strong>: np.ndarray</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># example without attributes</span></span>
<span class="line"><span style="color:#E1E4E8;">c1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.fake_candle()</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(c1)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [1.60945986e+12 9.70000000e+01 1.02000000e+02 1.02000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#  9.60000000e+01 2.20000000e+01]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># example with attributes</span></span>
<span class="line"><span style="color:#E1E4E8;">c2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.fake_candle({</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;timestamp&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1643104557000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;close&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;high&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;low&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;volume&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(c2)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [1.64310456e+12 1.00000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#  8.00000000e+00 2.00000000e+02]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># example without attributes</span></span>
<span class="line"><span style="color:#24292E;">c1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.fake_candle()</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(c1)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [1.60945986e+12 9.70000000e+01 1.02000000e+02 1.02000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#  9.60000000e+01 2.20000000e+01]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># example with attributes</span></span>
<span class="line"><span style="color:#24292E;">c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.fake_candle({</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;timestamp&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1643104557000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;close&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;high&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;low&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;volume&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(c2)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [1.64310456e+12 1.00000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#  8.00000000e+00 2.00000000e+02]</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#fake-range-candles">fake_range_candles</a>, <a href="#candles-from-close-prices">candles_from_close_prices</a></p><h2 id="fake-range-candles" tabindex="-1">fake_range_candles <a class="header-anchor" href="#fake-range-candles" aria-label="Permalink to &quot;fake_range_candles&quot;">​</a></h2><p>Similar to <a href="#fake-candle">fake_candle</a>, but generates a range of candles as many as you pass.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">fake_range_candles(count)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">fake_range_candles(count)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>count: int</li></ul><p><strong>Return Type</strong>: np.ndarray</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">range_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.fake_range_candles(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(range_candles)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [[1.60945920e+12 1.06000000e+02 1.09000000e+02 1.09000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.05000000e+02 9.70000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945926e+12 1.09000000e+02 1.10000000e+02 1.10000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.08000000e+02 1.50000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945932e+12 1.10000000e+02 1.17000000e+02 1.17000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.09000000e+02 2.00000000e+00]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">range_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.fake_range_candles(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(range_candles)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [[1.60945920e+12 1.06000000e+02 1.09000000e+02 1.09000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.05000000e+02 9.70000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945926e+12 1.09000000e+02 1.10000000e+02 1.10000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.08000000e+02 1.50000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945932e+12 1.10000000e+02 1.17000000e+02 1.17000000e+02</span></span>
<span class="line"><span style="color:#6A737D;">#   1.09000000e+02 2.00000000e+00]]</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#fake-candle">fake_candle</a>, <a href="#candles-from-close-prices">candles_from_close_prices</a></p><h2 id="candles-from-close-prices" tabindex="-1">candles_from_close_prices <a class="header-anchor" href="#candles-from-close-prices" aria-label="Permalink to &quot;candles_from_close_prices&quot;">​</a></h2><p>Generates a numpy array of candles from a list of close prices.</p><p>This is very helpful for when you have a range of close prices, and intend to run backtest on them. Because backtesting requires you to have candles (and not merely close prices), you can use this function to generate candles from close prices.</p><p>The first candle has the timestamp of <code>1609459200000</code> (<code>2021-01-01T00:00:00+00:00</code>) and after that, each has the timestamp of the previous candle plus 1 minute.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">candles_from_close_prices(prices)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">candles_from_close_prices(prices)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>prices: list</li></ul><p><strong>Return Type</strong>: np.ndarray</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">close_prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">np_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(np_candles)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [[1.60945920e+12 9.50000000e+00 1.00000000e+01 1.00000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   9.50000000e+00 1.00000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945926e+12 1.00000000e+01 1.10000000e+01 1.10000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.00000000e+01 2.80000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945932e+12 1.10000000e+01 1.20000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.30000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945938e+12 1.20000000e+01 1.20000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.20000000e+01 7.50000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945944e+12 1.20000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.51000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945950e+12 1.10000000e+01 1.30000000e+01 1.30000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 5.10000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945956e+12 1.30000000e+01 1.40000000e+01 1.40000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.30000000e+01 1.68000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945962e+12 1.40000000e+01 1.20000000e+01 1.40000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.20000000e+01 2.20000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945968e+12 1.20000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.44000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945974e+12 1.10000000e+01 1.50000000e+01 1.50000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.80000000e+02]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">close_prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">np_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(np_candles)</span></span>
<span class="line"><span style="color:#6A737D;"># output:</span></span>
<span class="line"><span style="color:#6A737D;"># [[1.60945920e+12 9.50000000e+00 1.00000000e+01 1.00000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   9.50000000e+00 1.00000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945926e+12 1.00000000e+01 1.10000000e+01 1.10000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.00000000e+01 2.80000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945932e+12 1.10000000e+01 1.20000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.30000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945938e+12 1.20000000e+01 1.20000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.20000000e+01 7.50000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945944e+12 1.20000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.51000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945950e+12 1.10000000e+01 1.30000000e+01 1.30000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 5.10000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945956e+12 1.30000000e+01 1.40000000e+01 1.40000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.30000000e+01 1.68000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945962e+12 1.40000000e+01 1.20000000e+01 1.40000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.20000000e+01 2.20000000e+01]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945968e+12 1.20000000e+01 1.10000000e+01 1.20000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.44000000e+02]</span></span>
<span class="line"><span style="color:#6A737D;">#  [1.60945974e+12 1.10000000e+01 1.50000000e+01 1.50000000e+01</span></span>
<span class="line"><span style="color:#6A737D;">#   1.10000000e+01 1.80000000e+02]]</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#fake-candle">fake_candle</a>, <a href="#fake-range-candles">fake_range_candles</a></p><h2 id="candlestick-chart" tabindex="-1">candlestick_chart <a class="header-anchor" href="#candlestick-chart" aria-label="Permalink to &quot;candlestick_chart&quot;">​</a></h2><p>Displays a candlestick chart from candles in numpy array format (which is the default for Jesse).</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">candlestick_chart(candles)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">candlestick_chart(candles)</span></span></code></pre></div><p><strong>Properties</strong>:</p><ul><li>candles: np.ndarray</li></ul><p><strong>Return Type</strong>: None</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># generate fake candles from close prices</span></span>
<span class="line"><span style="color:#E1E4E8;">close_prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">np_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">candlestick_chart(np_candles)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># generate fake candles from close prices</span></span>
<span class="line"><span style="color:#24292E;">close_prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">np_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.candles_from_close_prices(close_prices)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">candlestick_chart(np_candles)</span></span></code></pre></div><p>Which would display:</p><p><img src="https://api1.jesse.trade/storage/images/docs/candlestick-chart-example.jpg" alt="candlestick-chart-example"></p>`,70),o=[p];function c(t,r,i,y,d,E){return a(),n("div",null,o)}const u=s(l,[["render",c]]);export{g as __pageData,u as default};
