import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.4719a631.js";const E=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/docker.md","filePath":"docs/getting-started/docker.md"}'),n={name:"docs/getting-started/docker.md"},t=o(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">â€‹</a></h1><p>All the required config files for docker are shipped with <a href="/docs/getting-started/#create-a-new-jesse-project">new Jesse projects</a>.</p><div class="tip custom-block"><p class="custom-block-title">ðŸŽ¥ Video Tutorial</p><p>If you are a visual learner, try watching <a href="https://youtu.be/W8Hh56HJ-0I" target="_blank" rel="noreferrer">this YouTube video</a> that covers using Jesse with Docker.</p><p>The video also covers enabling code intellisense in VSCode which is a great tool for faster development.</p></div><h2 id="install-docker" tabindex="-1">Install Docker <a class="header-anchor" href="#install-docker" aria-label="Permalink to &quot;Install Docker&quot;">â€‹</a></h2><p>If you are on macOS or Windows I suggest installing the <a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noreferrer">Docker for Desktop</a> app if you haven&#39;t already. If you are on Ubuntu, here are the steps:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># install docker</span></span>
<span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-fsSL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://get.docker.com</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get-docker.sh</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get-docker.sh</span></span>
<span class="line"><span style="color:#6A737D;"># install docker-compose </span></span>
<span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-L</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(</span><span style="color:#B392F0;">uname</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;">)-$(</span><span style="color:#B392F0;">uname</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#9ECBFF;">)&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/bin/docker-compose</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/bin/docker-compose</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># install docker</span></span>
<span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-fsSL</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://get.docker.com</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get-docker.sh</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get-docker.sh</span></span>
<span class="line"><span style="color:#6A737D;"># install docker-compose </span></span>
<span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-L</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(</span><span style="color:#6F42C1;">uname</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;">)-$(</span><span style="color:#6F42C1;">uname</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-m</span><span style="color:#032F62;">)&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin/docker-compose</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">chmod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin/docker-compose</span></span></code></pre></div><h2 id="starting-containers" tabindex="-1">Starting containers <a class="header-anchor" href="#starting-containers" aria-label="Permalink to &quot;Starting containers&quot;">â€‹</a></h2><p>If you haven&#39;t <a href="/docs/getting-started/#create-a-new-jesse-project">created a Jesse project</a> yet, make sure to do so. Next we can start the containers.</p><p>All the config files for Docker are present inside your project&#39;s <code>docker</code> directory. If it&#39;s not, just copy it from <a href="https://github.com/jesse-ai/project-template" target="_blank" rel="noreferrer">this repository</a>.</p><p>Then inside the terminal make sure you are in the project root, open the <code>docker</code> directory and run the docker-compose command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># open the \`docker\` directory</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span>
<span class="line"><span style="color:#6A737D;"># run without the &quot;-d&quot; flag to see the output</span></span>
<span class="line"><span style="color:#B392F0;">docker-compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">up</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># open the \`docker\` directory</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span>
<span class="line"><span style="color:#6A737D;"># run without the &quot;-d&quot; flag to see the output</span></span>
<span class="line"><span style="color:#6F42C1;">docker-compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">up</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span></span></code></pre></div><p>The first time you do this, you have to wait until the images are downloaded. This can take a few minutes. Next times, will be much faster however, still it might take more than 10 seconds to start all the services.</p><p>That&#39;s it! Now open <a href="http://localhost:9000" target="_blank" rel="noreferrer">localhost:9000</a> in your browser to see the dashboard.</p><h2 id="stopping-container" tabindex="-1">Stopping container <a class="header-anchor" href="#stopping-container" aria-label="Permalink to &quot;Stopping container&quot;">â€‹</a></h2><p>To stop the containers, if you started them with the <code>-d</code> flag, you can just run the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker-compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker-compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span></span></code></pre></div><p>If you did it without the <code>-d</code> flag (so you can see the outputs in the terminal), you stop containers by pressing <code>Ctrl</code> + <code>c</code> on your keyboard.</p><h2 id="changing-the-port" tabindex="-1">Changing the port <a class="header-anchor" href="#changing-the-port" aria-label="Permalink to &quot;Changing the port&quot;">â€‹</a></h2><p>If you want to change the default <code>9000</code> port, you can do it by modifying the <code>APP_PORT</code> value in your project&#39;s <code>.env</code> file.</p><h2 id="sharing-the-database-across-instances" tabindex="-1">Sharing the database across instances. <a class="header-anchor" href="#sharing-the-database-across-instances" aria-label="Permalink to &quot;Sharing the database across instances.&quot;">â€‹</a></h2><p>You can use the same database by sharing the volume of the postgres container. Just add <code>external: true</code> to the <code>docker-compose.yml</code> of the new instance you create, like shown below. This tells docker to not create a new volume, but use the external existing one.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">volumes:</span></span>
<span class="line"><span style="color:#e1e4e8;">  postgres-data:</span></span>
<span class="line"><span style="color:#e1e4e8;">    external: true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">volumes:</span></span>
<span class="line"><span style="color:#24292e;">  postgres-data:</span></span>
<span class="line"><span style="color:#24292e;">    external: true</span></span></code></pre></div>`,22),l=[t];function p(r,c,i,d,h,y){return e(),a("div",null,l)}const g=s(n,[["render",p]]);export{E as __pageData,g as default};
