import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.4719a631.js";const p="/assets/notebooks-example.f5414392.png",_=JSON.parse('{"title":"Indicators","description":"","frontmatter":{},"headers":[],"relativePath":"docs/research/indicators.md","filePath":"docs/research/indicators.md"}'),o={name:"docs/research/indicators.md"},e=l(`<h1 id="indicators" tabindex="-1">Indicators <a class="header-anchor" href="#indicators" aria-label="Permalink to &quot;Indicators&quot;">​</a></h1><p>You can use <a href="/docs/research/indicators">indicators</a> modules in your notebooks or custom scripts just as you did in your strategies. However, because indicators return single values by default, in case you intend to draw charts (I&#39;m assuming that&#39;s why you&#39;re using Jupyter Notebooks in the first place) it is easier to set the <code>sequential=True</code> to get array of indicator values.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Let&#39;s import candles for <code>ETH-USDT</code> and calculate SMA with period of 50 and display them on a chart:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> datetime </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> datetime</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> matplotlib.pyplot </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> plt</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pandas.plotting </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> register_matplotlib_converters</span></span>
<span class="line"><span style="color:#E1E4E8;">register_matplotlib_converters()</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> jesse </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> research</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> jesse.indicators </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> ta</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">btc_candles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> research.get_candles(</span><span style="color:#9ECBFF;">&#39;Binance&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;BTC-USDT&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;30m&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2021-11-10&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2021-11-20&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">btc_sma_50 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ta.sma(btc_candles, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sequential</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">btc_close </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> btc_candles[:, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># convect timestamps into a format that is supported for plotting</span></span>
<span class="line"><span style="color:#E1E4E8;">times </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> btc_candles:</span></span>
<span class="line"><span style="color:#E1E4E8;">    times.append(datetime.fromtimestamp(c[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">plt.figure(</span><span style="color:#FFAB70;">figsize</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.plot(times, btc_close, </span><span style="color:#FFAB70;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;blue&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;btc&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.plot(times, btc_sma_50, </span><span style="color:#FFAB70;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;black&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;SMA 50&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.legend()</span><span style="color:#FDAEB7;font-style:italic;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> datetime </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> datetime</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib.pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pandas.plotting </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> register_matplotlib_converters</span></span>
<span class="line"><span style="color:#24292E;">register_matplotlib_converters()</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> jesse </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> research</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> jesse.indicators </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> ta</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">btc_candles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> research.get_candles(</span><span style="color:#032F62;">&#39;Binance&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;BTC-USDT&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;30m&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2021-11-10&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2021-11-20&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">btc_sma_50 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ta.sma(btc_candles, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#E36209;">sequential</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">btc_close </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> btc_candles[:, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># convect timestamps into a format that is supported for plotting</span></span>
<span class="line"><span style="color:#24292E;">times </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> btc_candles:</span></span>
<span class="line"><span style="color:#24292E;">    times.append(datetime.fromtimestamp(c[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(times, btc_close, </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;btc&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(times, btc_sma_50, </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;black&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;SMA 50&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend()</span><span style="color:#B31D28;font-style:italic;">;</span></span></code></pre></div><p><img src="`+p+'" alt="notebook-example"></p>',6),t=[e];function c(r,y,E,i,d,m){return a(),n("div",null,t)}const b=s(o,[["render",c]]);export{_ as __pageData,b as default};
