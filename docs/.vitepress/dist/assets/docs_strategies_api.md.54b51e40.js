import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.4719a631.js";const u=JSON.parse('{"title":"API reference","description":"","frontmatter":{},"headers":[],"relativePath":"docs/strategies/api.md","filePath":"docs/strategies/api.md"}'),e={name:"docs/strategies/api.md"},o=l(`<h1 id="api-reference" tabindex="-1">API reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API reference&quot;">​</a></h1><h2 id="cached" tabindex="-1">@cached <a class="header-anchor" href="#cached" aria-label="Permalink to &quot;@cached&quot;">​</a></h2><p>This decorator can improve performance a lot. It will cache your functions / properties to avoid unnecessary computational intensive repetitions. Especially indicator calculations that are called often are perfect candidates for this. The cache is cleared every new candle behind the scene.</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> jesse.strategies </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Strategy, cached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@</span><span style="color:#79B8FF;">property</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@cached</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">donchian</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ta.donchian(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.candles)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> jesse.strategies </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Strategy, cached</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@</span><span style="color:#005CC5;">property</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@cached</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">donchian</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ta.donchian(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.candles)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li>If you use it with <code>@property</code> make sure the order is right like above. Otherwise you will get an error.</li><li>Caching consumes a little time too. So to benefit from it the cached function/indicator should be slow and called multiple times in the strategy. Do tests whether it actually improves speed. Ignoring this warning and adding it to all functions most likely does more harm than good.</li></ul></div><h2 id="available-margin" tabindex="-1">available_margin <a class="header-anchor" href="#available-margin" aria-label="Permalink to &quot;available_margin&quot;">​</a></h2><p>Returns the available/remaining margin in your exchange wallet. It equals to your initial wallet balance multiplied by the leverage you&#39;re using, added by the unrealized profits on your open positions, subtracted by spent margin for open orders.</p><p>For the sake of not getting liquidated, it is safer to just use the <a href="#balance">balance</a> property in your strategies instead.</p><p>It is meant to be used in the futures markets only although in the spot market it equals to the <code>self.balance</code> property.</p><p><strong>Return Type</strong>: float</p><p><strong>See Also</strong>: <a href="#balance">balance</a></p><h2 id="average-entry-price" tabindex="-1">average_entry_price <a class="header-anchor" href="#average-entry-price" aria-label="Permalink to &quot;average\\_entry\\_price&quot;">​</a></h2><p>The average entry price estimated based on <strong>active orders</strong>(and not the open position). The word average indicates that in case you use multiple entry orders, this property returns the average value.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>average_entry_price</code> <strong>is not</strong> necessarily the same as the <code>entry_price</code> of the open position. If you need open positions&#39;s average entry price, use <code>self.position.entry_price</code>.</p></div><p><strong>Return Type</strong>: float</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    qty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># self.average_entry_price is equal to (100 + 120) / 2 == 110</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">120</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stop_loss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qty, </span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.take_profit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qty, </span><span style="color:#79B8FF;">140</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">filter_min_pnl</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    min_pnl </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    reward_per_qty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.average_take_profit </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.average_entry_price)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (reward_per_qty </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.average_entry_price) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> min_pnl</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    qty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># self.average_entry_price is equal to (100 + 120) / 2 == 110</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">120</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stop_loss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qty, </span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.take_profit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qty, </span><span style="color:#005CC5;">140</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">filter_min_pnl</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    min_pnl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line highlighted"><span style="color:#24292E;">    reward_per_qty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.average_take_profit </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.average_entry_price)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (reward_per_qty </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.average_entry_price) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> min_pnl</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Note that <code>average_entry_price</code> is only available after <code>go_long()</code> or <code>go_short()</code> is executed. Hence, it is only supposed to be used in either filter functions or when the position is open.</p><p>In other words, you cannot use it inside <code>should_long()</code> and <code>should_short()</code>.</p></div><p><strong>See Also</strong>: <a href="#average-take-profit">average_take_profit</a>, <a href="#average-stop-loss">average_stop_loss</a></p><h2 id="average-stop-loss" tabindex="-1">average_stop_loss <a class="header-anchor" href="#average-stop-loss" aria-label="Permalink to &quot;average\\_stop\\_loss&quot;">​</a></h2><p>Same as <a href="#average-entry-price">average_entry_price</a> but for stop-loss. The word average indicates that in case you use more than one point for stop-loss, this property returns the average value.</p><p><strong>Return Type</strong>: float</p><p><strong>See Also</strong>: <a href="#average-entry-price">average_entry_price</a>, <a href="#average-take-profit">average_take_profit</a></p><h2 id="average-take-profit" tabindex="-1">average_take_profit <a class="header-anchor" href="#average-take-profit" aria-label="Permalink to &quot;average\\_take\\_profit&quot;">​</a></h2><p>Same as <a href="#average-entry-price">average_entry_price</a> but for take-profit. The word average indicates that in case you use more than one point for take-profit, this property returns the average value.</p><p><strong>Return Type</strong>: float</p><p><strong>See Also</strong>: <a href="#average-entry-price">average_entry_price</a>, <a href="#average-stop-loss">average_stop_loss</a></p><h2 id="balance" tabindex="-1">balance <a class="header-anchor" href="#balance" aria-label="Permalink to &quot;balance&quot;">​</a></h2><p>Returns the current wallet in your exchange wallet. In the futures market, it behaves exactly as &quot;wallet balance in USDT&quot; does on <a href="http://jesse.trade/binance" target="_blank" rel="noreferrer">Binance Futures</a>.</p><p><strong>Return Type</strong>: float</p><p><strong>Aliases</strong>: <code>capital</code></p><p><strong>See Also</strong>: <a href="#available-margin">available_margin</a></p><h2 id="portfolio-value" tabindex="-1">portfolio_value <a class="header-anchor" href="#portfolio-value" aria-label="Permalink to &quot;portfolio_value&quot;">​</a></h2><p>Returns the value (in the currency of your trading session. Usually it&#39;s <code>USDT</code> or <code>USD</code>) of your entire portfolio (all positions).</p><p>This is sometimes useful as <code>self.balance</code> is like the &quot;wallet balance&quot; on futures exchanges and only changes <strong>after</strong> the position is closed. But <code>portfolio_value</code> takes both open and closed positions into account.</p><p><strong>Return Type</strong>: float</p><p><strong>See Also</strong>: <a href="#available-margin">available_margin</a></p><h2 id="daily-balances" tabindex="-1">daily_balances <a class="header-anchor" href="#daily-balances" aria-label="Permalink to &quot;daily_balances&quot;">​</a></h2><p>Returns a list of daily balances of your portfolio. It is as if you were storing your portfolio&#39;s value each day using the <a href="#portfolio-value">self.portfolio_value</a> property. It is used for calculation of metrics such as Sharpe Ratio, etc.</p><p><strong>Return Type</strong>: List[float]</p><p><strong>See Also</strong>: <a href="#portfolio-value">portfolio_value</a></p><h2 id="close" tabindex="-1">close <a class="header-anchor" href="#close" aria-label="Permalink to &quot;close&quot;">​</a></h2><p>Alias for <a href="#price">price</a></p><h2 id="current-candle" tabindex="-1">current_candle <a class="header-anchor" href="#current-candle" aria-label="Permalink to &quot;current_candle&quot;">​</a></h2><p>Returns the current candle in the form of a numpy array.</p><p><strong>Return Type</strong>: np.ndarray</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[</span></span>
<span class="line"><span style="color:#e1e4e8;">    timestamp,</span></span>
<span class="line"><span style="color:#e1e4e8;">    open,</span></span>
<span class="line"><span style="color:#e1e4e8;">    close,</span></span>
<span class="line"><span style="color:#e1e4e8;">    high,</span></span>
<span class="line"><span style="color:#e1e4e8;">    low,</span></span>
<span class="line"><span style="color:#e1e4e8;">    volume</span></span>
<span class="line"><span style="color:#e1e4e8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[</span></span>
<span class="line"><span style="color:#24292e;">    timestamp,</span></span>
<span class="line"><span style="color:#24292e;">    open,</span></span>
<span class="line"><span style="color:#24292e;">    close,</span></span>
<span class="line"><span style="color:#24292e;">    high,</span></span>
<span class="line"><span style="color:#24292e;">    low,</span></span>
<span class="line"><span style="color:#24292e;">    volume</span></span>
<span class="line"><span style="color:#24292e;">]</span></span></code></pre></div><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pprint </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pprint(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle)</span></span>
<span class="line"><span style="color:#6A737D;"># array([1.54638714e+12, 3.79409000e+03, 3.79714000e+03, 3.79800000e+03,</span></span>
<span class="line"><span style="color:#6A737D;">#        3.79400000e+03, 1.30908000e+02])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">pprint(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle.dtype)</span></span>
<span class="line"><span style="color:#6A737D;"># dtype(&#39;float64&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pprint </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pprint</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pprint(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle)</span></span>
<span class="line"><span style="color:#6A737D;"># array([1.54638714e+12, 3.79409000e+03, 3.79714000e+03, 3.79800000e+03,</span></span>
<span class="line"><span style="color:#6A737D;">#        3.79400000e+03, 1.30908000e+02])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pprint(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle.dtype)</span></span>
<span class="line"><span style="color:#6A737D;"># dtype(&#39;float64&#39;)</span></span></code></pre></div><p>You could get timestamp, open, close, high, low, and volume from candle array:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">timestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">open_price </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">close_price </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">high_price </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">low_price </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">volume </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.current_candle[</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">timestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">open_price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">close_price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">high_price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">low_price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">volume </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.current_candle[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Just like in the API of crypto exchanges, and TradingView, each candle&#39;s timestamp is the beginning of that time period, not the ending but the actual time it began.</p><p>For example if you are trading the <code>5m</code> timeframe and the current time is at <code>12:05:00</code>, the current_candle&#39;s timestamp will show <code>12:00:00</code>.</p></div><p><strong>See Also</strong>: <a href="#price">price</a>, <a href="#close">close</a>, <a href="#open">open</a>, <a href="#high">high</a>, <a href="#low">low</a></p><h2 id="candles" tabindex="-1">candles <a class="header-anchor" href="#candles" aria-label="Permalink to &quot;candles&quot;">​</a></h2><p>This property returns candles for current trading exchange, symbol, and timeframe. Is it frequently used when using <a href="/docs/indicators/">technical indicators</a> because the first parameter for all indicators is <code>candles</code>.</p><p><strong>Return Type:</strong> np.ndarray</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># get SMA with a period of 8 for current trading route</span></span>
<span class="line"><span style="color:#E1E4E8;">sma8 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ta.sma(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.candles, </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># get SMA with a period of 8 for current trading route</span></span>
<span class="line"><span style="color:#24292E;">sma8 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ta.sma(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.candles, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="get-candles" tabindex="-1">get_candles <a class="header-anchor" href="#get-candles" aria-label="Permalink to &quot;get_candles&quot;">​</a></h2><p>This method returns candles for the exchange, symbol, and timeframe that you specify, unlike <code>self.candles</code> which returns candles for the current route.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">get_candles(exchange: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, symbol: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, timeframe: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">get_candles(exchange: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, symbol: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, timeframe: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">)</span></span></code></pre></div><p>For simple strategies that trade only one route and use only one timeframe, <code>self.candles</code> is probably the way to go. Otherwise, use <code>self.get_candles()</code>.</p><p><strong>Return Type:</strong> np.ndarray</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@</span><span style="color:#79B8FF;">property</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">big_trend</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    Uses the SRSI indicator to determine the bigger trend of the market. </span></span>
<span class="line"><span style="color:#9ECBFF;">    The trading timeframe is &quot;4h&quot; so we use &quot;1D&quot; timeframe as the anchor timeframe.</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    k, d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ta.srsi(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.get_candles(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.exchange, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.symbol, </span><span style="color:#9ECBFF;">&#39;1D&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> k </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> d:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;"> k </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> d:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@</span><span style="color:#005CC5;">property</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">big_trend</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    Uses the SRSI indicator to determine the bigger trend of the market. </span></span>
<span class="line"><span style="color:#032F62;">    The trading timeframe is &quot;4h&quot; so we use &quot;1D&quot; timeframe as the anchor timeframe.</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    k, d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ta.srsi(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.get_candles(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.exchange, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.symbol, </span><span style="color:#032F62;">&#39;1D&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> d:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> d:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#candles">candles</a></p><h2 id="fee-rate" tabindex="-1">fee_rate <a class="header-anchor" href="#fee-rate" aria-label="Permalink to &quot;fee_rate&quot;">​</a></h2><p>The <code>fee_rate</code> property returns the fee rate that the exchange your strategy is trading on uses. This property is most commonly used as a parameter for <a href="/docs/utils.html#risk-to-qty">risk_to_qty</a>.</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">qty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utils.risk_to_qty(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.balance, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, entry, stop, </span><span style="color:#FFAB70;">fee_rate</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.fee_rate)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">qty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utils.risk_to_qty(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.balance, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, entry, stop, </span><span style="color:#E36209;">fee_rate</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.fee_rate)</span></span></code></pre></div><p><strong>Return Type</strong>: float</p><p><strong>See Also</strong>: <a href="/docs/utils.html#risk-to-qty">risk_to_qty</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <code>fee_rate</code> property returns exchange fee as a float. For example at Binance fee is <code>0.1%</code>, hence <code>self.fee_rate</code> would return <code>0.001</code>.</p></div><h2 id="high" tabindex="-1">high <a class="header-anchor" href="#high" aria-label="Permalink to &quot;high&quot;">​</a></h2><p>The current candle&#39;s high price.</p><p><strong>Return Type</strong>: float</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    qty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># open position at 2 dollars above current candle&#39;s high</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.high </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    qty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># open position at 2 dollars above current candle&#39;s high</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.high </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span></code></pre></div><h2 id="increased-count" tabindex="-1">increased_count <a class="header-anchor" href="#increased-count" aria-label="Permalink to &quot;increased_count&quot;">​</a></h2><p>How many times has the position size been increased since this trade was opened?</p><p>This is useful for strategies that for example enter/exit in multiple points, and you&#39;d like to update something related to it.</p><p><strong>Return Type</strong>: int</p><p>This property is useful if:</p><ol><li>You have been trying to open position in more than one point:</li></ol><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 1</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 2</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 3</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 1</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 2</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># after this point self.increased_count will be 3</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span></code></pre></div><ol start="2"><li>You decide to increase the size of the open position because of some factor of yours:</li></ol><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_position</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># momentum_rank being a method you&#39;ve defined somewhere that</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># examines the momentum of the current trend or something</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.momentum_rank </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.is_long:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># buy qty of 1 for the current price (MARKET order)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_position</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># momentum_rank being a method you&#39;ve defined somewhere that</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># examines the momentum of the current trend or something</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.momentum_rank </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.is_long:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># buy qty of 1 for the current price (MARKET order)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span></code></pre></div><h2 id="index" tabindex="-1">index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;index&quot;">​</a></h2><p>The <code>index</code> property is a counter which can be used to detect how many times the strategy has been executed. Imagine we&#39;re doing a loop in backtest mode, and this index is the index of that loop. The below examples can explain it better.</p><p><strong>Return Type</strong>: int</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># example #1: go long when the first candle is received</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">should_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># example #2: let&#39;s say there are some expensive operations in a  </span></span>
<span class="line"><span style="color:#6A737D;"># method I&#39;ve defined called do_slow_updates() (like machine learning stuff)</span></span>
<span class="line"><span style="color:#6A737D;"># that I&#39;d like to do once a day while trading &quot;1m&quot; candles</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">before</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1440</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        do_slow_updates()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># example #1: go long when the first candle is received</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">should_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># example #2: let&#39;s say there are some expensive operations in a  </span></span>
<span class="line"><span style="color:#6A737D;"># method I&#39;ve defined called do_slow_updates() (like machine learning stuff)</span></span>
<span class="line"><span style="color:#6A737D;"># that I&#39;d like to do once a day while trading &quot;1m&quot; candles</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">before</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1440</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        do_slow_updates()</span></span></code></pre></div><h2 id="has-long-entry-orders" tabindex="-1">has_long_entry_orders <a class="header-anchor" href="#has-long-entry-orders" aria-label="Permalink to &quot;has\\_long\\_entry\\_orders&quot;">​</a></h2><p>Used to know the type of entry orders for times that position is not opened yet such as inside the <code>should_cancel_entry()</code> and <code>before()</code> methods and also in filters.</p><p><strong>Return Type</strong>: bool</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">should_cancel_entry</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># cancel entry orders only if trying to enter a long trade</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.has_long_entry_orders:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">should_cancel_entry</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># cancel entry orders only if trying to enter a long trade</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.has_long_entry_orders:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span></code></pre></div><h2 id="has-short-entry-orders" tabindex="-1">has_short_entry_orders <a class="header-anchor" href="#has-short-entry-orders" aria-label="Permalink to &quot;has\\_short\\_entry\\_orders&quot;">​</a></h2><p>Like <a href="#has-long-entry-orders">has_long_entry_orders</a> but for short trades.</p><p><strong>Return Type</strong>: bool</p><h2 id="is-close" tabindex="-1">is_close <a class="header-anchor" href="#is-close" aria-label="Permalink to &quot;is_close&quot;">​</a></h2><p>Is the current position close?</p><p><strong>Return Type</strong>: bool</p><p>Alias for <code>self.position.is_close</code></p><h2 id="is-long" tabindex="-1">is_long <a class="header-anchor" href="#is-long" aria-label="Permalink to &quot;is_long&quot;">​</a></h2><p>Is the type of the open position (current trade) <code>long</code>?</p><p><strong>Return Type</strong>: bool</p><h2 id="is-open" tabindex="-1">is_open <a class="header-anchor" href="#is-open" aria-label="Permalink to &quot;is_open&quot;">​</a></h2><p>Is the current position open?</p><p><strong>Return Type</strong>: bool</p><p>Alias for <code>self.position.is_open</code></p><h2 id="is-short" tabindex="-1">is_short <a class="header-anchor" href="#is-short" aria-label="Permalink to &quot;is_short&quot;">​</a></h2><p>Is the type of the open position (current trade) <code>short</code>?</p><p><strong>Return Type</strong>: bool</p><h2 id="exchange-type" tabindex="-1">exchange_type <a class="header-anchor" href="#exchange-type" aria-label="Permalink to &quot;exchange_type&quot;">​</a></h2><p>Returns the type of the exchange your strategy is trading on. It will be either <code>spot</code> or <code>futures</code>.</p><p><strong>Return Type</strong>: str</p><h2 id="is-backtesting" tabindex="-1">is_backtesting <a class="header-anchor" href="#is-backtesting" aria-label="Permalink to &quot;is_backtesting&quot;">​</a></h2><p>Returns whether the strategy is running in backtest mode or not.</p><p><strong>Return Type</strong>: bool</p><h2 id="is-livetrading" tabindex="-1">is_livetrading <a class="header-anchor" href="#is-livetrading" aria-label="Permalink to &quot;is_livetrading&quot;">​</a></h2><p>Returns whether the strategy is running in live trading mode or not.</p><p><strong>Return Type</strong>: bool</p><h2 id="is-papertrading" tabindex="-1">is_papertrading <a class="header-anchor" href="#is-papertrading" aria-label="Permalink to &quot;is_papertrading&quot;">​</a></h2><p>Returns whether the strategy is running in paper trading mode or not.</p><p><strong>Return Type</strong>: bool</p><h2 id="is-live" tabindex="-1">is_live <a class="header-anchor" href="#is-live" aria-label="Permalink to &quot;is_live&quot;">​</a></h2><p>Returns whether the strategy is running in either live trading or paper trading mode or not. It is the equivalent of:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.is_livetrading </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.is_papertrading</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">self</span><span style="color:#24292E;">.is_livetrading </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.is_papertrading</span></span></code></pre></div><p><strong>Return Type</strong>: bool</p><h2 id="is-spot-trading" tabindex="-1">is_spot_trading <a class="header-anchor" href="#is-spot-trading" aria-label="Permalink to &quot;is_spot_trading&quot;">​</a></h2><p>Returns whether the exchange your strategy is trading on is a spot exchange.</p><p><strong>Return Type</strong>: bool</p><h2 id="is-futures-trading" tabindex="-1">is_futures_trading <a class="header-anchor" href="#is-futures-trading" aria-label="Permalink to &quot;is_futures_trading&quot;">​</a></h2><p>Returns whether the exchange your strategy is trading on is a futures exchange.</p><p><strong>Return Type</strong>: bool</p><h2 id="leverage" tabindex="-1">leverage <a class="header-anchor" href="#leverage" aria-label="Permalink to &quot;leverage&quot;">​</a></h2><p>The <code>leverage</code> property returns the leverage number that you have set in your config file for the exchange you&#39;re running inside the strategy. For spot markets, it always returns <code>1</code>.</p><p><strong>Return Type</strong>: int</p><h2 id="liquidation-price" tabindex="-1">liquidation_price <a class="header-anchor" href="#liquidation-price" aria-label="Permalink to &quot;liquidation_price&quot;">​</a></h2><p>The <code>liquidation_price</code> property returns the price at which the position will get liquidated which is used in futures exchanges only. At the moment, backtests support the <code>isolated</code> mode only and not the cross mode.</p><p>In the live mode, the value for the <code>liquidation_price</code> is fetched from the exchange once every minute so what you see in the dashboard isn&#39;t updated in real-time.</p><p><strong>Return Type</strong>: float</p><h2 id="mark-price" tabindex="-1">mark_price <a class="header-anchor" href="#mark-price" aria-label="Permalink to &quot;mark_price&quot;">​</a></h2><p>The <code>mark_price</code> property returns the mark-price in futures exchanges which are used for the calculation of the liquidation price. This property is used for live trading futures exchanges only. During backtests, it equals to <code>self.price</code>.</p><p><strong>Return Type</strong>: float</p><h2 id="funding-rate" tabindex="-1">funding_rate <a class="header-anchor" href="#funding-rate" aria-label="Permalink to &quot;funding_rate&quot;">​</a></h2><p>The <code>funding_rate</code> property returns the current funding rate in futures exchanges. This property is used for live trading futures exchanges only. During backtests, it equals <code>0</code>.</p><p><strong>Return Type</strong>: float</p><h2 id="next-funding-timestamp" tabindex="-1">next_funding_timestamp <a class="header-anchor" href="#next-funding-timestamp" aria-label="Permalink to &quot;next_funding_timestamp&quot;">​</a></h2><p>The <code>next_funding_timestamp</code> property returns the timestamp for the next funding. It is used only when trading perpetual contracts. This property is used for live trading futures exchanges only. During backtests, it equals <code>None</code>.</p><p><strong>Return Type</strong>: int</p><h2 id="liquidate" tabindex="-1">liquidate <a class="header-anchor" href="#liquidate" aria-label="Permalink to &quot;liquidate&quot;">​</a></h2><p>This method is used to quickly liquidate the open position using a market order. It is a shortcut to use instead of writing:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.pnl </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.take_profit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stop_loss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.pnl </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.take_profit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stop_loss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span></code></pre></div><p>It is often used within the <code>update_position</code> method of strategies that close positions in specific conditions.</p><p><strong>Example</strong>:</p><p>Let&#39;s open a long position at first <a href="#index">index</a>, and close it at 10th:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_position</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.liquidate()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">should_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_position</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.liquidate()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">should_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span></code></pre></div><h2 id="low" tabindex="-1">low <a class="header-anchor" href="#low" aria-label="Permalink to &quot;low&quot;">​</a></h2><p>The current candle&#39;s low price.</p><p><strong>Return Type</strong>: float</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    qty </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># open position at 2 dollars above current candle&#39;s low</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.high </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># stop-loss at 2 dollars below current candle&#39;s low</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.low </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    qty </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># open position at 2 dollars above current candle&#39;s low</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.high </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># stop-loss at 2 dollars below current candle&#39;s low</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.low </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span></code></pre></div><h2 id="metrics" tabindex="-1">metrics <a class="header-anchor" href="#metrics" aria-label="Permalink to &quot;metrics&quot;">​</a></h2><p>The <code>metrics</code> property returns the metrics that you usually would see at the end of backtests. It is useful for coding formulas such as <a href="https://www.investopedia.com/articles/trading/04/091504.asp" target="_blank" rel="noreferrer">Kelly Criterion</a>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Be aware that without trades it will return <code>None</code>.</p></div><p><strong>Available metrics:</strong></p><ul><li>total</li><li>total_winning_trades</li><li>total_losing_trades</li><li>starting_balance</li><li>finishing_balance</li><li>win_rate</li><li>max_R</li><li>min_R</li><li>mean_R</li><li>ratio_avg_win_loss</li><li>longs_count</li><li>longs_percentage</li><li>short_percentage</li><li>shorts_count</li><li>fee</li><li>net_profit</li><li>net_profit_percentage</li><li>average_win</li><li>average_loss</li><li>expectancy</li><li>expectancy_percentage</li><li>expected_net_profit_every_100_trades</li><li>average_holding_period</li><li>average_winning_holding_period</li><li>average_losing_holding_period</li><li>gross_profit</li><li>gross_loss</li><li>max_drawdown</li><li>annual_return</li><li>sharpe_ratio</li><li>calmar_ratio</li><li>sortino_ratio</li><li>omega_ratio</li><li>total_open_trades</li><li>open_pl</li><li>winning_streak</li><li>losing_streak</li><li>largest_losing_trade</li><li>largest_winning_trade</li><li>current_streak</li></ul><p><strong>Return Type</strong>: dict</p><h2 id="open" tabindex="-1">open <a class="header-anchor" href="#open" aria-label="Permalink to &quot;open&quot;">​</a></h2><p>The current candle&#39;s opening price.</p><p><strong>Return Type</strong>: float</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">should_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># go long if current candle is bullish</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.close </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.open:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">should_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># go long if current candle is bullish</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.close </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.open:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span></code></pre></div><h2 id="orders" tabindex="-1">orders <a class="header-anchor" href="#orders" aria-label="Permalink to &quot;orders&quot;">​</a></h2><p>Returns all the orders submitted by this strategy.</p><p><strong>Return Type</strong>: List[Order]</p><h2 id="position" tabindex="-1">position <a class="header-anchor" href="#position" aria-label="Permalink to &quot;position&quot;">​</a></h2><p>The position object of the trading route.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Please note that each route instance has only one position which is accessible inside the strategy. It doesn&#39;t mean that you cannot trade two positions using one strategy; to do that simply create two routes using the same strategy but with different symbols.</p></div><p><strong>Return Type</strong>: Position</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># only useful properties are mentioned </span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Position</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># the (average) entry price of the position | None if position is close</span></span>
<span class="line"><span style="color:#E1E4E8;">    entry_price: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># the quantity of the current position | 0 if position is close</span></span>
<span class="line"><span style="color:#E1E4E8;">    qty: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># the timestamp of when the position opened | None if position is close</span></span>
<span class="line"><span style="color:#E1E4E8;">    opened_at: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># The value of open position</span></span>
<span class="line"><span style="color:#E1E4E8;">    value: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># The type of open position, which can be either short, long, or close</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">str</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># The PNL of the position</span></span>
<span class="line"><span style="color:#E1E4E8;">    pnl: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># The PNL% of the position</span></span>
<span class="line"><span style="color:#E1E4E8;">    pnl_percentage: </span><span style="color:#79B8FF;">float</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Is the current position open?</span></span>
<span class="line"><span style="color:#E1E4E8;">    is_open: </span><span style="color:#79B8FF;">bool</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Is the current position close?</span></span>
<span class="line"><span style="color:#E1E4E8;">    is_close: </span><span style="color:#79B8FF;">bool</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># only useful properties are mentioned </span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Position</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># the (average) entry price of the position | None if position is close</span></span>
<span class="line"><span style="color:#24292E;">    entry_price: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># the quantity of the current position | 0 if position is close</span></span>
<span class="line"><span style="color:#24292E;">    qty: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># the timestamp of when the position opened | None if position is close</span></span>
<span class="line"><span style="color:#24292E;">    opened_at: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># The value of open position</span></span>
<span class="line"><span style="color:#24292E;">    value: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># The type of open position, which can be either short, long, or close</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">str</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># The PNL of the position</span></span>
<span class="line"><span style="color:#24292E;">    pnl: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># The PNL% of the position</span></span>
<span class="line"><span style="color:#24292E;">    pnl_percentage: </span><span style="color:#005CC5;">float</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Is the current position open?</span></span>
<span class="line"><span style="color:#24292E;">    is_open: </span><span style="color:#005CC5;">bool</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Is the current position close?</span></span>
<span class="line"><span style="color:#24292E;">    is_close: </span><span style="color:#005CC5;">bool</span></span></code></pre></div><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># if position is in profit by 10%, update stop-loss to break even</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_position</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.pnl_percentage </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stop_loss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.qty, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.position.entry_price</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># if position is in profit by 10%, update stop-loss to break even</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_position</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.pnl_percentage </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stop_loss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.qty, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.position.entry_price</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#is-long">is_long</a>, <a href="#is-short">is_short</a>, <a href="#is-open">is_open</a>, <a href="#is-close">is_close</a></p><h2 id="all-positions" tabindex="-1">all_positions <a class="header-anchor" href="#all-positions" aria-label="Permalink to &quot;all_positions&quot;">​</a></h2><p>Returns a python dictionary with all the positions. The keys are the symbols and the values are the position objects.</p><p><strong>Return Type</strong>: dict</p><p><strong>Example:</strong></p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># assuming that I have two trading routes, one for BTC-USDT and one for ETH-USDT</span></span>
<span class="line"><span style="color:#E1E4E8;">btc_position </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.all_positions[</span><span style="color:#9ECBFF;">&#39;BTC-USDT&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">eth_position </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.all_positions[</span><span style="color:#9ECBFF;">&#39;ETH-USDT&#39;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># assuming that I have two trading routes, one for BTC-USDT and one for ETH-USDT</span></span>
<span class="line"><span style="color:#24292E;">btc_position </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.all_positions[</span><span style="color:#032F62;">&#39;BTC-USDT&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">eth_position </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.all_positions[</span><span style="color:#032F62;">&#39;ETH-USDT&#39;</span><span style="color:#24292E;">]</span></span></code></pre></div><p><strong>See Also</strong>: <a href="#position">position</a></p><h2 id="price" tabindex="-1">price <a class="header-anchor" href="#price" aria-label="Permalink to &quot;price&quot;">​</a></h2><p>The current/closing price of the trading symbol at the trading time frame.</p><p><strong>Return Type</strong>: float</p><p><strong>Aliases</strong>: <code>close</code></p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># buy 1 share at the current price (MARKET order)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># buy 1 share at the current price (MARKET order)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span></code></pre></div><h2 id="reduced-count" tabindex="-1">reduced_count <a class="header-anchor" href="#reduced-count" aria-label="Permalink to &quot;reduced_count&quot;">​</a></h2><p>How many times has the position size been reduced since this trade was opened?</p><p>This is useful for strategies that for example exit in multiple points, and you&#39;d like to update something related to it.</p><p><strong>Return Type</strong>: int</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">go_long</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.buy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stop_loss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.take_profit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.price </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">update_position</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># even though we have especified the exit price </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># for the second half, we now updated to exit with SMA20</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.reduced_count </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.take_profit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">SMA20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@</span><span style="color:#79B8FF;">property</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SMA20</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ta.sma(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.candles, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">go_long</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.buy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stop_loss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.take_profit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.price </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update_position</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># even though we have especified the exit price </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># for the second half, we now updated to exit with SMA20</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.reduced_count </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.take_profit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">SMA20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@</span><span style="color:#005CC5;">property</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SMA20</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ta.sma(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.candles, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="shared-vars" tabindex="-1">shared_vars <a class="header-anchor" href="#shared-vars" aria-label="Permalink to &quot;shared_vars&quot;">​</a></h2><p><code>shared_vars</code> is a dictionary object just like <code>vars</code> except that it is shared among all your <a href="/docs/routes">routes</a>.</p><p>You would need <code>shared_vars</code> for writing strategies that require more than one route, and when those routes need to communicate with each other.</p><p><code>shared_vars</code> could act as a bridge. One example could be in a pairs trading strategy which requires two routes to communicate with each other (one goes long when the other goes short)</p><p><strong>Return Type</strong>: dict</p><p><strong>See Also</strong>: <a href="#vars">vars</a></p><h2 id="time" tabindex="-1">time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;time&quot;">​</a></h2><p>The current UTC timestamp.</p><p><strong>Return Type</strong>: int</p><h2 id="trades" tabindex="-1">trades <a class="header-anchor" href="#trades" aria-label="Permalink to &quot;trades&quot;">​</a></h2><p>Returns all the completed trades for this strategy.</p><p><strong>Return Type</strong>: List[CompletedTrade]</p><h2 id="vars" tabindex="-1">vars <a class="header-anchor" href="#vars" aria-label="Permalink to &quot;vars&quot;">​</a></h2><p><code>vars</code> is the name of a dictionary object present in your strategy that you can use as a placeholder for your variables.</p><p>Of course, you could define your own variables inside <code>__init__</code> instead, but that would bring a concern about naming your variables to prevent conflict with built-in variables and properties.</p><p>Using <code>vars</code> would also make it easier for debugging.</p><p><strong>Return Type</strong>: dict</p><h2 id="log" tabindex="-1">log <a class="header-anchor" href="#log" aria-label="Permalink to &quot;log&quot;">​</a></h2><p>This method can be used to log text from within the strategy which is very helpful for debugging or monitoring (in case of live trading). Accepts a second <code>log_type</code> parameter with values as <code>info</code> or <code>error</code>.</p><p>The default is <code>info</code>. <code>error</code> logs are notified separately in the live mode, so that&#39;s a nice way of using them.</p><p>If you need to send a notification for the logged message in live mode, pass the <code>send_notification</code> parameter as <code>True</code>. For custom logs to custom channels, you can set <code>webhook</code> parameter with either a hard-coded webhook or an environment value from <code>.env</code>. Default is the General / Error channels.</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">log(</span></span>
<span class="line"><span style="color:#E1E4E8;">    msg: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    log_type: </span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    send_notification: </span><span style="color:#FFAB70;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    webhook: </span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">log(</span></span>
<span class="line"><span style="color:#24292E;">    msg: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    log_type: </span><span style="color:#E36209;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    send_notification: </span><span style="color:#E36209;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    webhook: </span><span style="color:#E36209;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="watch-list" tabindex="-1">watch_list <a class="header-anchor" href="#watch-list" aria-label="Permalink to &quot;watch_list&quot;">​</a></h2><p>This method is to be used in live trading mode only:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">watch_list() </span><span style="color:#FDAEB7;font-style:italic;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">watch_list() </span><span style="color:#B31D28;font-style:italic;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span></span></code></pre></div><p><strong>Return Type:</strong> list</p><p>Sometimes you might want to debug/monitor your running strategy constantly. One way to do that is to define the <code>watch_list()</code> method in your strategy which returns a list of tuples containing keys and values. You can fill anything you want in it; indicator values, entry/exit signals, etc.</p><p><strong>Example</strong>:</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@</span><span style="color:#79B8FF;">property</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">short_ema</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ta.ema(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.candles, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#B392F0;">@</span><span style="color:#79B8FF;">property</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">long_ema</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ta.ema(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.candles, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">watch_list</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#9ECBFF;">&#39;Short EMA&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.short_ema),</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#9ECBFF;">&#39;Long EMA&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.long_ema),</span></span>
<span class="line"><span style="color:#E1E4E8;">        (</span><span style="color:#9ECBFF;">&#39;Trend&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.short_ema </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.long_ema </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@</span><span style="color:#005CC5;">property</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">short_ema</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ta.ema(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.candles, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#6F42C1;">@</span><span style="color:#005CC5;">property</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">long_ema</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ta.ema(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.candles, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">watch_list</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#032F62;">&#39;Short EMA&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.short_ema),</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#032F62;">&#39;Long EMA&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.long_ema),</span></span>
<span class="line"><span style="color:#24292E;">        (</span><span style="color:#032F62;">&#39;Trend&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.short_ema </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.long_ema </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span></code></pre></div><p>Then, when you run the live session, you will see a new table like:</p><p><img src="https://api1.jesse.trade/storage/images/docs/watch-list.jpg" alt="watch-list"></p>`,236),p=[o];function t(r,c,i,y,E,d){return a(),n("div",null,p)}const g=s(e,[["render",t]]);export{u as __pageData,g as default};
